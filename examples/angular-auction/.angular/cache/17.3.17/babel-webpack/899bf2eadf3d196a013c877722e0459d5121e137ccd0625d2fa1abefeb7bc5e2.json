{"ast":null,"code":"import _asyncToGenerator from \"D:/Scripts/Factory/fhevm-sdk-pro/node_modules/.pnpm/@babel+runtime@7.26.10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport const bigInt = () => function () {\n    var _ref = _asyncToGenerator(function* (e) {\n      try {\n        return (yield WebAssembly.instantiate(e)).instance.exports.b(BigInt(0)) === BigInt(0);\n      } catch (e) {\n        return !1;\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 6, 1, 96, 1, 126, 1, 126, 3, 2, 1, 0, 7, 5, 1, 1, 98, 0, 0, 10, 6, 1, 4, 0, 32, 0, 11])),\n  bulkMemory = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 3, 1, 0, 1, 10, 14, 1, 12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11]));\n    });\n    return function bulkMemory() {\n      return _ref2.apply(this, arguments);\n    };\n  }(),\n  exceptions = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 8, 1, 6, 0, 6, 64, 25, 11, 11]));\n    });\n    return function exceptions() {\n      return _ref3.apply(this, arguments);\n    };\n  }(),\n  exceptionsFinal = () => _asyncToGenerator(function* () {\n    try {\n      return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABBAFgAAADAgEAChABDgACaR9AAQMAAAsACxoL\"), e => e.codePointAt(0))), !0;\n    } catch (e) {\n      return !1;\n    }\n  })(),\n  extendedConst = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 5, 3, 1, 0, 1, 11, 9, 1, 0, 65, 1, 65, 2, 106, 11, 0]));\n    });\n    return function extendedConst() {\n      return _ref5.apply(this, arguments);\n    };\n  }(),\n  gc = () => _asyncToGenerator(function* () {\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 95, 1, 120, 0]));\n  })(),\n  jsStringBuiltins = () => _asyncToGenerator(function* () {\n    try {\n      return yield WebAssembly.instantiate(Uint8Array.from(atob(\"AGFzbQEAAAABBgFgAW8BfwIXAQ53YXNtOmpzLXN0cmluZwR0ZXN0AAA=\"), e => e.codePointAt(0)), {}, {\n        builtins: [\"js-string\"]\n      }), !0;\n    } catch (e) {\n      return !1;\n    }\n  })(),\n  jspi = () => _asyncToGenerator(function* () {\n    return \"Suspending\" in WebAssembly;\n  })(),\n  memory64 = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 5, 3, 1, 4, 1]));\n    });\n    return function memory64() {\n      return _ref9.apply(this, arguments);\n    };\n  }(),\n  multiMemory = () => _asyncToGenerator(function* () {\n    try {\n      return new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 5, 5, 2, 0, 0, 0, 0])), !0;\n    } catch (e) {\n      return !1;\n    }\n  })(),\n  multiValue = /*#__PURE__*/function () {\n    var _ref1 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 6, 1, 96, 0, 2, 127, 127, 3, 2, 1, 0, 10, 8, 1, 6, 0, 65, 0, 65, 0, 11]));\n    });\n    return function multiValue() {\n      return _ref1.apply(this, arguments);\n    };\n  }(),\n  mutableGlobals = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 2, 8, 1, 1, 97, 1, 98, 3, 127, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 5, 1, 1, 97, 3, 1]));\n    });\n    return function mutableGlobals() {\n      return _ref10.apply(this, arguments);\n    };\n  }(),\n  referenceTypes = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 7, 1, 5, 0, 208, 112, 26, 11]));\n    });\n    return function referenceTypes() {\n      return _ref11.apply(this, arguments);\n    };\n  }(),\n  relaxedSimd = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 15, 1, 13, 0, 65, 1, 253, 15, 65, 2, 253, 15, 253, 128, 2, 11]));\n    });\n    return function relaxedSimd() {\n      return _ref12.apply(this, arguments);\n    };\n  }(),\n  saturatedFloatToInt = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 12, 1, 10, 0, 67, 0, 0, 0, 0, 252, 0, 26, 11]));\n    });\n    return function saturatedFloatToInt() {\n      return _ref13.apply(this, arguments);\n    };\n  }(),\n  signExtensions = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 8, 1, 6, 0, 65, 0, 192, 26, 11]));\n    });\n    return function signExtensions() {\n      return _ref14.apply(this, arguments);\n    };\n  }(),\n  simd = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]));\n    });\n    return function simd() {\n      return _ref15.apply(this, arguments);\n    };\n  }(),\n  streamingCompilation = () => _asyncToGenerator(function* () {\n    return \"compileStreaming\" in WebAssembly;\n  })(),\n  tailCall = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator(function* () {\n      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 6, 1, 4, 0, 18, 0, 11]));\n    });\n    return function tailCall() {\n      return _ref17.apply(this, arguments);\n    };\n  }(),\n  threads = () => function () {\n    var _ref18 = _asyncToGenerator(function* (e) {\n      try {\n        return \"undefined\" != typeof MessageChannel && new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), WebAssembly.validate(e);\n      } catch (e) {\n        return !1;\n      }\n    });\n    return function (_x2) {\n      return _ref18.apply(this, arguments);\n    };\n  }()(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11])),\n  typeReflection = () => _asyncToGenerator(function* () {\n    return \"Function\" in WebAssembly;\n  })(),\n  typedFunctionReferences = () => _asyncToGenerator(function* () {\n    try {\n      return new WebAssembly.Module(Uint8Array.from(atob(\"AGFzbQEAAAABEANgAX8Bf2ABZAABf2AAAX8DBAMBAAIJBQEDAAEBChwDCwBBCkEqIAAUAGoLBwAgAEEBagsGANIBEAAL\"), e => e.codePointAt(0))), !0;\n    } catch (e) {\n      return !1;\n    }\n  })();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}